name: stack
version: "0.1"
author: Chinmay Kulkarni <chnm.kulkarni@gmail.com>
about: Examples of concurrent data structures implemented using node-replication.
args:
        - replicas:
                short: r
                long: replicas
                takes_value: true
                help: How replicas should be created and allocated (either one per l1, l2, l3, socket or entire system).
                possible_values: [ "l1", "l2", "l3", "socket", "one" ]
                default_value: "one"
        - threads:
                short: t
                long: threads
                help: The number of total threads to spawn (supply multiple values for multiple experiments).
                takes_value: true
                use_delimiter: true
                multiple: true
                default_value: "1"
        - mapping:
                short: m
                help: How threads are mapped to cores (none = do not pin, sequential = keep close together, interleave = spread across sockets).
                value_name: MAPPING
                long: mapping
                takes_value: true
                possible_values: [ "none", "sequential", "interleave" ]
        - logsz:
                short: l
                long: logsz
                help: The size of the shared log in GB.
                takes_value: true
                default_value: "1"
        - nop:
                short: n
                long: nop
                help: The number of operations that each thread must issue against the log.
                takes_value: true
                default_value: "1000"
